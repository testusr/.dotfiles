"" .ideavimrc - Matt Chapman


"" Base Settings
"" ========================================================

set scrolloff=10
set linenumber
set showmode
set showcmd

set smartcase
set incsearch
set hlsearch

set visualbell

" Use system clipboard
set clipboard+=unnamed   

let mapleader = " "


"" Plugin Settings
"" ========================================================

set surround
set highlightedyank
set sneak
set nerdtree

" Easymotion settings
set easymotion
set notimeout

" Which-key settings
set which-key
let g:WhichKey_FontSize = 16
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"

let g:WhichKeyDesc_leader = "<leader> Leader key"

let g:WhichKeyDesc_leader = "<leader>x Open file explorer"

let g:WhichKeyDesc_easymotion = "<leader>j Jump with Easymotion"
let g:WhichKeyDesc_easymotion_prefix = "<leader><leader>"

let g:WhichKeyDesc_comment = "<leader>c Comment line"

let g:WhichKeyDesc_fold = "<leader>z Folding"
let g:WhichKeyDesc_fold_all = "<leader>zc Fold all regions"
let g:WhichKeyDesc_unfold_all = "<leader>zo Unfold all regions"

let g:WhichKeyDesc_window = "<leader>w Window splits"
let g:WhichKeyDesc_window_split_vertically = "<leader>wv Split vertically"
let g:WhichKeyDesc_window_split_horizontally = "<leader>wh Split horizontally"
let g:WhichKeyDesc_window_split_unsplit = "<leader>wu Unsplit"
let g:WhichKeyDesc_window_split_move_editor = "<leader>wm Move editor to opposite tab group"


let g:WhichKeyDesc_display = "<leader>d Display options"
let g:WhichKeyDesc_zen_mode = "<leader>dz Toggle Zen mode"
let g:WhichKeyDesc_df_mode = "<leader>dd Toggle Distraction-Free mode"
let g:WhichKeyDesc_fullscreen = "<leader>df Toggle full screen"

let g:WhichKeyDesc_action= "<leader>a Actions"
let g:WhichKeyDesc_action_context_menu = "<leader>am Open context menu"
let g:WhichKeyDesc_action_search = "<leader>as Open command modal"

let g:WhichKeyDesc_file_quickLook = "<leader><leader> Recent files"

let g:WhichKeyDesc_file_nav = "<leader>f File navigation"
let g:WhichKeyDesc_file_nav_goto_file = "<leader>ff Go to file"
let g:WhichKeyDesc_file_nav_goto_content = "<leader>fc Search for file content"
let g:WhichKeyDesc_file_nav_show_recent_files = "<leader>fr Show recent files"
let g:WhichKeyDesc_file_nav_show_recent_locations = "<leader>fl Show recent locations"

let g:WhichKeyDesc_close_tab = "<leader>q Close active tab"

let g:WhichKeyDesc_refactoring = "<leader>r Refactoring menu"
let g:WhichKeyDesc_refactoring_rename = "<leader>rn Rename element"
let g:WhichKeyDesc_refactoring_method = "<leader>rm Extract method"
let g:WhichKeyDesc_refactoring_variable = "<leader>rv Introduce variable"
let g:WhichKeyDesc_refactoring_field = "<leader>rf Introduce field"
let g:WhichKeyDesc_refactoring_signature = "<leader>rs Change signature"
let g:WhichKeyDesc_refactoring_all = "<leader>rr Open refactorings list"

let g:WhichKeyDesc_goto = "<leader>g Go to X"
let g:WhichKeyDesc_goto_declaration = "<leader>gd Go to Definition"
let g:WhichKeyDesc_goto_type_declaration = "<leader>gy Go to Type Definition"
let g:WhichKeyDesc_goto_implementation = "<leader>gi Go to Implementation"
let g:WhichKeyDesc_goto_usages = "<leader>gu Go to Usages"
let g:WhichKeyDesc_goto_test = "<leader>gt Go to Test"
let g:WhichKeyDesc_goto_back = "<leader>gb Go Back"
let g:WhichKeyDesc_goto_forward = "<leader>gf Go Forward"

let g:WhichKeyDesc_git = "<leader>g Git operations"
let g:WhichKeyDesc_git_commit = "<leader>gc Open Git commit dialog"
let g:WhichKeyDesc_git_status = "<leader>gs Open Git status dialog"
let g:WhichKeyDesc_git_branches = "<leader>gb Open Git branches list"

let g:WhichKeyDesc_errors = "<leader>e Error navigation"
let g:WhichKeyDesc_errors_next = "<leader>en Go to next error in solution"
let g:WhichKeyDesc_errors_prev = "<leader>ep Go to previous error in solution"


"" Key mappings
"" ========================================================

inoremap jk <Esc>

" Tab navigation
nnoremap <C-A-o> :tabnext<CR>
nnoremap <C-A-i> :tabprev<CR>

" Pane navigation
nnoremap <C-A-h> <C-w>h
nnoremap <C-A-l> <C-w>l
nnoremap <C-A-k> <C-w>k
nnoremap <C-A-j> <C-w>j

" Jump between methods
nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

" Execute macro saved in 'q' register
nnoremap qj @q

" Popup navigation
inoremap <C-j> :action PopupMenu-selectNext<CR>
inoremap <C-k> :action PopupMenu-selectPrev<CR>


"" Leader commands
"" ========================================================

" Comment lines
map <leader>c :action CommentByLineComment<CR>

" Jump around with easymotion
map <leader>j <Plug>(easymotion-s)

" Open NERDTree (use q to exit)
map <leader>x :NERDTreeToggle<CR>

" Folding
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

" Window splits
map <leader>wv :action SplitVertically<CR>
map <leader>ws :action SplitHorizontally<CR>
map <leader>wu :action Unsplit<CR>
map <leader>wm :action MoveEditorToOppositeTabGroup<CR>

" Display options
map <leader>dd :action ToggleDistractionFreeMode<CR>
map <leader>dz :action ToggleZenMode<CR>
map <leader>df :action ToggleFullScreen<CR>

" Actions
map <leader>am :action ShowIntentionActions<CR>
map <leader>as :action SearchEverywhere<CR>

" File navigation
map <leader>ff :action GotoFile<CR>
map <leader>fr :action RecentFiles<CR>
map <leader>fc :action FindInPath<CR>
map <leader><leader> :action RecentFiles<CR>
map <leader>fl :action RecentLocations<CR>
map <leader>fs :action NewScratchFile<CR>

" Close active tab
map <leader>q :action CloseContent<CR>

" Refactoring
map <leader>rn :action RenameElement<CR>
map <leader>rm :action ExtractMethod<CR>
map <leader>rv :action IntroduceVariable<CR>
map <leader>rf :action IntroduceField<CR>
map <leader>rs :action ChangeSignature<CR>
map <leader>rr :action Refactorings.QuickListPopupAction<CR>

" Go to code
nmap <leader>gd :action GotoDeclaration<CR>
nmap <leader>gy :action GotoTypeDeclaration<CR>
nmap <leader>gi :action GotoImplementation<CR>
nmap <leader>gu :action ShowUsages<CR>
nmap <leader>gt :action GotoTest<CR>
nmap <leader>gf :action Back<CR>
nmap <leader>gb :action Forward<CR>

" Git windows
map <leader>gc :action CheckinProject<CR>
map <leader>gs :action ActivateVersionControlToolWindow<CR>
map <leader>gb :action Git.Branches<CR>

" Errors
map <leader>en :action ReSharperGotoNextErrorInSolution<CR>
map <leader>ep :action ReSharperGotoPrevErrorInSolution<CR>

